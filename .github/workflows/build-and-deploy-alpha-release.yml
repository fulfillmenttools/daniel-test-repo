name: "Alpha Release - Build & Deploy"

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: buildjet-8vcpu-ubuntu-2204

    steps:
      - name: Check current branch is a release branch and remember build time.
        id: startUpCheck
        if: ${{ startsWith(github.ref, 'refs/heads/release') }}
        run: |
          echo SUCCESS: The branch ${{ github.ref }} is a release branch.
          echo "BUILD_DATE=$(TZ=Europe/Berlin date +%Y-%m-%d_%H-%M-%S)" >> $GITHUB_OUTPUT

      - name: Cancel Build If Current Branch Is No Release Branch.
        if: ${{ !startsWith(github.ref, 'refs/heads/release') }}
        run: |
          echo ERROR: The branch ${{ github.ref }} is no release branch.
          exit 1

      - name: Sourcecode Checkout
        uses: actions/checkout@v3

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Execute Unit Tests
        run: bash ./gradlew testReleaseUnitTest --stacktrace

      #      - name: Display Unit Tests Result
      #        uses: dorny/test-reporter@v1
      #        if: success() || failure()
      #        with:
      #          name: Unit Tests
      #          path: app/build/test-results/testReleaseUnitTest/jest-*.xml
      #          reporter: jest-junit

      - name: Build Universal APK (release)
        id: buildAPKRelease
        run: |
          bash ./gradlew packageReleaseUniversalApk --stacktrace
          #env:
          #BRANCH_TYPE: ${{ env.BRANCH_TYPE }}
          #STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        #KEY_PASSWORD_RELEASE: ${{ secrets.KEY_PASSWORD_RELEASE }}

      - name: Get Google Cloud Platform Access
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: 'ocff-infra-artifacts-v1'
          service_account_key: ${{ secrets.GOOGLE_BUCKET_CREDENTIALS }}
          export_default_credentials: true

      - name: Read Version From JSON
        id: version
        uses: juliangruber/read-file-action@02bbba9876a8f870efd4ad64e3b9088d3fb94d4b
        with:
          path: ./app/version.json

      - name: Upload APK to GCP Alpha-Channel
        env:
          BUILD_DATE: ${{ steps.startUpCheck.outputs.BUILD_DATE }}
          VERSION_NAME: ${{ fromJson(steps.version.outputs.content).major }}-${{ fromJson(steps.version.outputs.content).minor }}-${{ fromJson(steps.version.outputs.content).patch }}-${{ github.run_number }}
          VERSION_CODE: ${{ fromJson(steps.version.outputs.content).versionCode }}
          METADATA_FILE: metadata.json
        run: |
          # writeMetadata.js file needs BUILD_DATE, VERSION_NAME, VERSION_CODE and METADATA_FILE parameters
          node ./.github/workflows/scripts/writeMetadata.js
          GS_PATH=gs://ocff-deployment-mobileapps/hubis-app/releases/${{ env.VERSION_NAME }}/alpha/
          gsutil cp -n ./app/build/outputs/apk_from_bundle/release/*.apk $GS_PATH
          gsutil cp $METADATA_FILE $GS_PATH
