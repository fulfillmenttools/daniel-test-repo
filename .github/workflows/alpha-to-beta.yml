name: "BETA stage - From ALPHA to BETA"

on:
  workflow_dispatch:
    inputs:
      version_for_beta_channel:
        description: 'Version of ALPHA app in format {major}-{minor}-{patch}-{releaseAutoIncrement}'
        required: true

env:
  # PACKAGE_APP_NAME -> no empty spaces or special character
  # TAG_PREFIX -> can be empty or must end with underscore
  # ARTIFACT_POSTFIX -> can be empty or must start with hyphen
  APP_NAME: Hubis App
  PACKAGE_APP_NAME: hubisapp
  PACKAGE_ROOT_NAME: com.ocfulfillment.fulfillmentapp
  TAG_PREFIX: hubis-app_
  ARTIFACT_POSTFIX: -beta

jobs:
  build:
    runs-on: buildjet-8vcpu-ubuntu-2204

    steps:
      ##############################################################################################
      #     SETUP
      ##############################################################################################

      - name: Sourcecode checkout
        uses: actions/checkout@v3

      - name: Format version from input into major.minor.patch-iterator
        run: |
          echo "APP_VERSION_NAME_DOTS=$(./.github/workflows/scripts/formatVersion.sh ${{ github.event.inputs.version_for_beta_channel }})" >> $GITHUB_ENV
          echo "APP_VERSION_NAME_DASH=$(./.github/workflows/scripts/formatVersion.sh ${{ github.event.inputs.version_for_beta_channel }})" >> $GITHUB_ENV
        shell: bash

      ##############################################################################################
      #     CHECK CURRENT STAGE STATUS
      ##############################################################################################

      - name: Get Google Cloud Platform access
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: 'ocff-infra-artifacts-v1'
          service_account_key: ${{ secrets.GOOGLE_BUCKET_CREDENTIALS }}
          export_default_credentials: true

      - name: Check that ALPHA stage is set (Google Cloud Storage)
        run: ./.github/workflows/scripts/stageExistsCheck.sh ${{ github.event.inputs.version_for_beta_channel }} alpha $PACKAGE_APP_NAME
        shell: bash

      - name: Check that no BETA stage is set (Google Cloud Storage)
        run: ./.github/workflows/scripts/stageDoesntExistsCheck.sh ${{ github.event.inputs.version_for_beta_channel }} beta $PACKAGE_APP_NAME
        shell: bash

      - name: Check that no GA stage is set (Google Cloud Storage)
        run: ./.github/workflows/scripts/stageDoesntExistsCheck.sh ${{ github.event.inputs.version_for_beta_channel }} ga $PACKAGE_APP_NAME
        shell: bash

      ##############################################################################################
      #     GIT TAG HANDLING
      ##############################################################################################
      # TODO - MOVE TO BOTTOM UNDER "MOVE FROM ALPHA TO BETA STAGE"!

      - name: Rename GitHub Release & Tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release edit "${{ env.TAG_PREFIX }}${{ env.APP_VERSION_NAME_DOTS }}" --title="${{ env.TAG_PREFIX }}${{ env.APP_VERSION_NAME_DOTS }} [BETA]" --prerelease=true

      ##############################################################################################
      #     MOVE FROM ALPHA TO BETA STAGE
      ##############################################################################################

      - name: Move app from ALPHA to BETA stage (Google Cloud Storage)
        run: gcloud storage cp -r gs://ocff-deployment-mobileapps/$PACKAGE_APP_NAME/android/releases/${{ github.event.inputs.version_for_beta_channel }}/alpha gs://ocff-deployment-mobileapps/$PACKAGE_APP_NAME/android/releases/${{ github.event.inputs.version_for_beta_channel }}/beta

      - name: Download files from BETA stage for Google Artifact Registry and Google Play Store upload
        run: |
          mkdir downloads
          gcloud storage cp -r gs://ocff-deployment-mobileapps/$PACKAGE_APP_NAME/android/releases/${{ github.event.inputs.version_for_beta_channel }}/beta ./downloads


          echo "APK_PATH=./downloads" >> $GITHUB_ENV
          echo "AAB_PATH=./downloads" >> $GITHUB_ENV







      - name: Upload Android App Bundle (*.aab) to Google Play Store (BETA track)
        uses: r0adkll/upload-google-play@8c2ebfdb6e1b439d3a31d35772b3f0f489d688c9
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          packageName: ${{ env.PACKAGE_ROOT_NAME }}
          releaseFiles: ./downloads/beta/${{ env.PACKAGE_APP_NAME }}_${{ github.event.inputs.version_for_beta_channel }}_release.aab
          releaseName: ${{ env.APP_NAME }} (${{ env.APP_VERSION_NAME_DOTS }})
          track: beta testing
          status: completed
          mappingFile: ./downloads/beta/mapping.txt
