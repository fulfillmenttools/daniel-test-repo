name: "BETA stage - From ALPHA to BETA"

on:
  workflow_dispatch:
    inputs:
      version_for_beta_channel:
        description: 'Version of ALPHA app in format {major}-{minor}-{patch}-{releaseAutoIncrement}'
        required: true

env:
  # PACKAGE_APP_NAME -> no empty spaces or special character
  # ARTIFACT_POSTFIX -> can be empty or must start with hyphen
  APP_NAME: Hubis App
  PACKAGE_APP_NAME: hubisapp
  PACKAGE_ROOT_NAME: com.ocfulfillment
  ARTIFACT_POSTFIX: -beta

jobs:
  build:
    runs-on: buildjet-8vcpu-ubuntu-2204
    permissions:
      id-token: write
      contents: write
      packages: read

    steps:
      ##############################################################################################
      #     SETUP
      ##############################################################################################

      - name: Sourcecode checkout
        uses: actions/checkout@v3

      - name: Read application version in dots and dash format
        run: |
          echo "APP_VERSION_NAME_DOTS=$(./.github/workflows/scripts/formatVersionDashToDots.sh ${{ github.event.inputs.version_for_beta_channel }})" >> $GITHUB_ENV
          echo "APP_VERSION_NAME_DASH=${{ github.event.inputs.version_for_beta_channel }}" >> $GITHUB_ENV
        shell: bash

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      ##############################################################################################
      #     AUTHENTICATE TO GOOGLE CLOUD
      ##############################################################################################

      - id: google-auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          create_credentials_file: 'true'
          workload_identity_provider: projects/716153011929/locations/global/workloadIdentityPools/github-access-pool/providers/gh-provider
          service_account: google-artifact-access@ocff-infra-app-artifacts-prd.iam.gserviceaccount.com

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          skip_install: true

      ##############################################################################################
      #     CHECK CURRENT STAGE STATUS
      ##############################################################################################

      - name: Check that ALPHA stage is set (Google Cloud Storage)
        run: ./.github/workflows/scripts/stageExistsCheck.sh ${{ env.APP_VERSION_NAME_DASH }} alpha ${{ env.PACKAGE_APP_NAME }}
        shell: bash

      - name: Check that no BETA stage is set (Google Cloud Storage)
        run: ./.github/workflows/scripts/stageDoesntExistsCheck.sh ${{ env.APP_VERSION_NAME_DASH }} beta ${{ env.PACKAGE_APP_NAME }}
        shell: bash

      - name: Check that no GA stage is set (Google Cloud Storage)
        run: ./.github/workflows/scripts/stageDoesntExistsCheck.sh ${{ env.APP_VERSION_NAME_DASH }} ga ${{ env.PACKAGE_APP_NAME }}
        shell: bash

      ##############################################################################################
      #     GIT TAG HANDLING
      ##############################################################################################
      # TODO - MOVE TO BOTTOM UNDER "MOVE FROM ALPHA TO BETA STAGE"!

      - name: Rename GitHub Release & Tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release edit "${{ env.PACKAGE_APP_NAME }}_${{ env.APP_VERSION_NAME_DOTS }}" --title="${{ env.PACKAGE_APP_NAME }}_${{ env.APP_VERSION_NAME_DOTS }} [BETA]" --prerelease=true

      ##############################################################################################
      #     MOVE FROM ALPHA TO BETA STAGE
      ##############################################################################################

      - name: Move app from ALPHA to BETA stage (Google Cloud Storage)
        run: gcloud storage cp -r gs://ocff-deployment-mobileapps/$PACKAGE_APP_NAME/android/releases/${{ env.APP_VERSION_NAME_DASH }}-alpha gs://ocff-deployment-mobileapps/$PACKAGE_APP_NAME/android/releases/${{ env.APP_VERSION_NAME_DASH }}-beta

      - name: Download files from BETA stage for Google Artifact Registry and Google Play Store upload
        run: |
          mkdir downloads
          gcloud storage cp -r gs://ocff-deployment-mobileapps/$PACKAGE_APP_NAME/android/releases/${{ env.APP_VERSION_NAME_DASH }}-beta ./downloads

      - name: Set environment variables for Google Artifact Registry upload
        run: |
          echo "APK_PATH=./downloads)" >> $GITHUB_ENV
          echo "AAB_PATH=./downloads)" >> $GITHUB_ENV
        shell: bash

      - name: Upload Application to Google Artifact Registry
        run: bash ./gradlew publishDanielPublicationToMavenRepository --stacktrace

      - name: Upload Android App Bundle (*.aab) to Google Play Store (BETA track)
        uses: r0adkll/upload-google-play@8c2ebfdb6e1b439d3a31d35772b3f0f489d688c9
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          packageName: ${{ env.PACKAGE_ROOT_NAME }}
          releaseFiles: ./downloads/beta/${{ env.PACKAGE_APP_NAME }}_${{ github.event.inputs.version_for_beta_channel }}_release.aab
          releaseName: ${{ env.APP_NAME }} (${{ env.APP_VERSION_NAME_DOTS }})
          track: beta testing
          status: completed
          mappingFile: ./downloads/beta/mapping.txt
