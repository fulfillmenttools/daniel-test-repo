name: "Alpha stage - Build & deploy to ALPHA"

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: buildjet-8vcpu-ubuntu-2204

    steps:
      ##############################################################################################
      #     SETUP
      ##############################################################################################

      - name: Check current branch is a release branch and remember build time
        id: startUpCheck
        if: ${{ startsWith(github.ref, 'refs/heads/release') }}
        run: |
          echo SUCCESS: The branch ${{ github.ref }} is a release branch.
          echo "BUILD_DATE=$(TZ=Europe/Berlin date +%Y-%m-%d_%H-%M-%S)" >> $GITHUB_OUTPUT

      - name: Cancel build if current branch is no release branch
        if: ${{ !startsWith(github.ref, 'refs/heads/release') }}
        run: |
          echo ERROR: The branch ${{ github.ref }} is no release branch.
          exit 1

      - name: Sourcecode checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      ##############################################################################################
      #     TESTING
      ##############################################################################################

      - name: Execute unit tests
        run: bash ./gradlew testReleaseUnitTest --stacktrace

      ##############################################################################################
      #     BUILDING
      ##############################################################################################

      - name: Build Android Universal APK (*.apk)
        id: buildAPKRelease
        run: |
          bash ./gradlew packageReleaseUniversalApk --stacktrace
        #env:
        #BRANCH_TYPE: ${{ env.BRANCH_TYPE }}
        #STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        #KEY_PASSWORD_RELEASE: ${{ secrets.KEY_PASSWORD_RELEASE }}

      - name: Build Android App Bundle (*.aab)
        run: |
          bash ./gradlew bundleRelease --stacktrace
        #env:
        #BRANCH_TYPE: ${{ env.BRANCH_TYPE }}
        #STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        #KEY_PASSWORD_RELEASE: ${{ secrets.KEY_PASSWORD_RELEASE }}

      ##############################################################################################
      #     GIT TAG HANDLING
      ##############################################################################################

      - name: Increment 'releaseAutoIncrement' JSON value
        if: ${{ startsWith(github.ref, 'refs/heads/release') }}
        run: |
          cat ./app/version.json | jq '.releaseAutoIncrement = .releaseAutoIncrement + 1' | tee ./app/version.json
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add ./app/version.json
          git commit -m "Increment 'releaseAutoIncrement' value in 'version.json'."
          git push

      - name: Read version from JSON
        id: version
        uses: juliangruber/read-file-action@02bbba9876a8f870efd4ad64e3b9088d3fb94d4b
        with:
          path: ./app/version.json

      - name: Create release tag v${{ fromJson(steps.version.outputs.content).major }}.${{ fromJson(steps.version.outputs.content).minor }}.${{ fromJson(steps.version.outputs.content).patch }}-${{ fromJson(steps.version.outputs.content).releaseAutoIncrement }}
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ fromJson(steps.version.outputs.content).major }}.${{ fromJson(steps.version.outputs.content).minor }}.${{ fromJson(steps.version.outputs.content).patch }}-${{ fromJson(steps.version.outputs.content).releaseAutoIncrement }}
          name: Release ${{ fromJson(steps.version.outputs.content).major }}.${{ fromJson(steps.version.outputs.content).minor }}.${{ fromJson(steps.version.outputs.content).patch }}-${{ fromJson(steps.version.outputs.content).releaseAutoIncrement }}
          draft: false
          prerelease: false

      ##############################################################################################
      #     UPLOAD FILES
      ##############################################################################################

      - name: Get Google Cloud Platform access
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: 'ocff-infra-artifacts-v1'
          service_account_key: ${{ secrets.GOOGLE_BUCKET_CREDENTIALS }}
          export_default_credentials: true

      - name: Upload Android APK to ALPHA stage (Google Cloud Storage)
        env:
          BUILD_DATE: ${{ steps.startUpCheck.outputs.BUILD_DATE }}
          VERSION_NAME: ${{ fromJson(steps.version.outputs.content).major }}-${{ fromJson(steps.version.outputs.content).minor }}-${{ fromJson(steps.version.outputs.content).patch }}-${{ fromJson(steps.version.outputs.content).releaseAutoIncrement }}
          VERSION_CODE: ${{ fromJson(steps.version.outputs.content).versionCode }}
          METADATA_FILE: metadata.json
        run: |
          # writeMetadata.js file needs BUILD_DATE, VERSION_NAME, VERSION_CODE and METADATA_FILE parameters
          node ./.github/workflows/scripts/writeMetadata.js
          GS_PATH=gs://ocff-deployment-mobileapps/hubis-app/releases/${{ env.VERSION_NAME }}/alpha/
          gsutil cp -n ./app/build/outputs/apk_from_bundle/release/*.apk $GS_PATH
          gsutil cp $METADATA_FILE $GS_PATH

      - name: Upload Android App Bundle (*.aab) to Google Play (ALPHA track)
        uses: r0adkll/upload-google-play@8c2ebfdb6e1b439d3a31d35772b3f0f489d688c9
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          packageName: com.ocfulfillment.fulfillmentapp
          releaseFiles: ./app/build/outputs/bundle/release/fft_${{ env.APP_VERSION }}_${{ env.BRANCH_TYPE }}-release.aab
          releaseName: fulfillmenttools ${{ fromJson(steps.version.outputs.content).versionCode }} (${{ fromJson(steps.version.outputs.content).major }}.${{ fromJson(steps.version.outputs.content).minor }}.${{ fromJson(steps.version.outputs.content).patch }})
          track: alpha
          status: completed
          mappingFile: ./app/build/outputs/mapping/release/mapping.txt

          ##############################################################################################
          #     SLACK NOTIFICATIONS
          ##############################################################################################

      # TODO
